name: Sonoran WK_Wars2x Release

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Extract Version
        id: extract-version
        run: |
          VERSION=$(grep -oP 'version "\K\d+\.\d+\.\d+[^"]*' fxmanifest.lua)
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "Grabbed version number of $VERSION, will be used for this release..."
        shell: bash

      - name: Create or Recreate Release
        id: create-update-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=${{ steps.extract-version.outputs.version }}
          RELEASE_NAME="v$VERSION"
          RELEASE_TAG="$VERSION"
          
          # Check if the release already exists
          if curl --fail -sSL "https://api.github.com/repos/${{ github.repository }}/releases/tags/$RELEASE_TAG"; then
            echo "Deleting existing release $RELEASE_NAME"
            RELEASE_ID=$(curl -X GET "https://api.github.com/repos/${{ github.repository }}/releases/tags/$RELEASE_TAG" \
              -H "Authorization: token $GITHUB_TOKEN" | jq -r '.id')
            curl -X DELETE "https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID" \
              -H "Authorization: token $GITHUB_TOKEN"
          else
            echo "Release $RELEASE_NAME does not exist"
          fi

          # Check if the tag exists, and if it does, delete it
          if curl --fail -sSL "https://api.github.com/repos/${{ github.repository }}/git/refs/tags/$RELEASE_TAG"; then
            echo "Deleting existing tag $RELEASE_TAG"
            REF_SHA=$(curl -sSL "https://api.github.com/repos/${{ github.repository }}/git/refs/tags/$RELEASE_TAG" | jq -r '.object.sha')
            curl -X DELETE "https://api.github.com/repos/${{ github.repository }}/git/refs/tags/$RELEASE_TAG" \
              -H "Authorization: token $GITHUB_TOKEN"
          else
            echo "Tag $RELEASE_TAG does not exist"
          fi

          echo "Creating a new release $RELEASE_NAME"
            RESPONSE=$(curl -X POST "https://api.github.com/repos/${{ github.repository }}/releases" \
              -H "Authorization: token $GITHUB_TOKEN" \
              -d "{\"tag_name\":\"$RELEASE_TAG\",\"name\":\"$RELEASE_NAME\",\"target_commitish\":\"master\",\"draft\":false,\"prerelease\":false,\"generate_release_notes\":true,\"make_latest\":\"true\"}")
          
          echo $RESPONSE

          RELEASE_ID=$(echo $RESPONSE | jq -r '.id')
        shell: bash